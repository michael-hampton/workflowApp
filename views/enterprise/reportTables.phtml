<link rel="stylesheet" type="text/css" href="/core/public/css/plugins/steps/jquery.steps.css">

<style>
    .wizard-big.wizard > .content {
        min-height: 600px;
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-content">
                <div class="client-detail">
                    
                    <button class="btn btn-primary AddNewOne">+</button>

                    <strong>Report Scope</strong>

                    <ul class="list-group clear-list">
                        <?php foreach ($arrReports as $arrReport): ?>

                            <li class="list-group-item fist-item">
                                <span class="pull-right col-lg-4"> 
                                    <span id="<?= $arrReport['id'] ?>" class="label label-primary editReport">Edit</span> 
                                    <span class="label label-danger editReport">Delete</span> 
                                </span>
                                <span class="pull-right col-lg-4"> <?= $arrReport['description'] ?></span>
                                <?= $arrReport['title'] ?>
                            </li>
                        <?php endforeach ?>
                    </ul>

                </div>
            </div>
        </div>

    </div>
</div>

<div class="row reportBuilder" style="display:none;">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title">
                <h5>Report Builder</h5>
                
            </div>
            <div class="ibox-content">
                <h2>
                    Custom Built reports
                </h2>
                <p>
                    This example show how to use Steps with jQuery Validation plugin.
                </p>

                <form id="form" action="#" class="wizard-big">
                    <h1>Scope</h1>
                    <fieldset>
                        <h2>Scope</h2>
                        <div class="row">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label>Title *</label>
                                    <input id="title" name="title" type="text" class="form-control required">
                                </div>
                                <div class="form-group">
                                    <label>Description *</label>
                                    <input id="description" name="description" type="text" class="form-control required">
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="text-center">
                                    <div style="margin-top: 20px">
                                        <i class="fa fa-sign-in" style="font-size: 180px;color: #e5e5e5 "></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <h1>Definition</h1>
                    <fieldset>
                        <h2>Definition</h2>
                        <div class="row">
                            <h3>Selected Tables</h3>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label>Table *</label>
                                    <select id="table" name="table" class="form-control required">
                                        <option value=""></option>
                                        <?php foreach ($tables as $table): ?>
                                            <option value="<?= $table['id'] ?>"><?= $table['name'] ?></option>
                                        <?php endforeach; ?>
                                    </select>


                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <select multiple="multiple" class="form-control required" id="selectColumns" style="display: none;" name="selectColumns[]">

                                        </select>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <h3>Filters</h3>
                                    <button type="button" class="btn btn-primary btn-xs addFilterRow">+</button>
                                </div>

                                <div class="col-lg-12 pull-left filters">

                                </div>

                                <input type="hidden" id="reportId" name="reportId">


                                <h3>Joins</h3>

                                <h3>Order By</h3>
                                
                                <div class="col-lg-12 pull-left orderByCol">
                                    <div role="form" class="form-inline orderBy">
                                        <div class="form-group">
                                            <select id="orderTable" class="form-control orderTable" name="order[orderTable]">
                                                <option value=""></option>
                                                <?php foreach ($tables as $table): ?>
                                                    <option value="<?= $table['id'] ?>"><?= $table['name'] ?></option>
                                                <?php endforeach; ?>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <select id="orderColumn" class="form-control orderColumn" name="order[orderColumn]">

                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <select id="ordeeDir" class="form-control orderDir" name="order[orderDir]">
                                                <option value="ASC">ASC</option>
                                                <option value="DESC">DESC</option>
                                            </select>
                                        </div>




                                    </div>
                                </div>
                            </div>

                        </div>
                        <hr>

                        <div class="row">
                            <div class="columns">

                            </div>
                        </div>

                    </fieldset>

                    <h1>Result</h1>

                    <fieldset>

                        <textarea class="form-control col-lg-12" name="sqlPreview" id="sqlPreview"></textarea>

                        <a style="display:none;" href="#" class="btn btn-success csvFile">Export to CSV</a> 
                        
                        <div class="text-center reportResultBox" style="margin-top: 120px">
                            <h2>You did it Man :-)</h2>
                        </div>
                    </fieldset>

                    <h1>Finish</h1>
                    <fieldset>
                        <h2>Terms and Conditions</h2>
                        <input id="acceptTerms" name="acceptTerms" type="checkbox" class="required"> <label for="acceptTerms">I agree with the Terms and Conditions.</label>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>

</div>

<script src="/core/public/js/plugins/steps/jquery.steps.js" type="text/javascript"></script>
<script src="/core/public/js/plugins/validate/jquery.validate.min.js" type="text/javascript"></script>

<?php
print_r ($fields);
?>

<script>

    var reports = <?= $reportJSON ?> ;
    var arrFields = <?= json_encode($fields) ?> ;
    var tableList = <?= $tableList ?> ;

    var update = false;

    function loadFilters() {

        $(".addFilterRow").off();
        $(".addFilterRow").on("click", function() {
            buildFilters();
        });

        $("[href='#cancel']").on("click", function() {
            $(".client-detail").parent().parent().slideDown();
            $(".reportBuilder").slideUp();
        });

        $(".deleteFilter").off();
        $(".deleteFilter").on("click", function() {
            $(this).parent().remove();
        });

        $(".filterTable").on("change", function() {
            var id = $(this).val();
            console.log(arrFields[id]);

            var $this = $(this);

            try {

                var options = '';

                $.each(arrFields[id], function(index, value) {
                    options += '<option value="' + value.FLD_NAME + '">' + value.FLD_NAME + '</option>';
                });

                $this.parent().parent().find(".filterColumn").append(options);
            } catch (err) {
                alert(err);
            }

        });

        $(".orderTable").on("change", function() {
            var id = $(this).val();
            console.log(arrFields[id]);
            $options = loadOptions(id, false);

            $(".orderColumn").append($options);
        });

        $("#table").on("change", function() {
            var id = $(this).val();
            console.log(arrFields[id]);
            loadOptions(id);
        });
    }

    function loadOptions(tableid, select = true) {
        try {

            var options = '';

            $.each(arrFields[tableid], function(index, value) {
                options += '<option value="' + value.FLD_NAME + '">' + value.FLD_NAME + '</option>';
            });

            if (select === true) {
                $("#selectColumns").append(options);
                $("#selectColumns").show();
            } else {
                return options;
            }

        } catch (err) {
            alert(err);
        }
    }

    function buildTableList(tableid) {
        var HTML = '';

        $.each(tableList, function(index, value) {
            selected = value.id === tableid ? 'selected="selected"' : '';
            HTML += '<option value="' + value.id + '" ' + selected + '>' + value.name + '</option>';
        });

        return HTML;
    }

    function buildPreview(arrData) {
        var data = $.parseJSON(arrData);
        
        console.log(data);
        
        $(".csvFile").attr("href", data.filename.replace('C:/xampp/htdocs','')).show();
        
        var arrData = data['result'];


        var HTML = '<div class="table-responsive">';
        HTML += '<table class="table table-striped table-hover">';

        HTML += '<thead>';

        HTML += '<tr>';

        var keys = $.map(arrData[0], function(element, index) {
            return index;
        });

        $.each(keys, function(index, key) {
            HTML += '<th>' + key + '</th>';
        });

        HTML += '</tr>';

        HTML += '</thead>';

        HTML += '<tbody>';

        $.each(arrData, function(index, rows) {
            HTML += '<tr>';

            $.each(rows, function(index, value) {
                HTML += '<td>' + value + '</td>';
            });

            HTML += '</tr>';
        });

        HTML += '</tbody>';
        HTML += '</table>';
        HTML += '</div>';

        $(".reportResultBox").html(HTML);
    }

    function buildFilters(arrData) {
        tableCondition = '';
        tableValue = '';
        table = '';
        tableColumn = '';
        filterJoin = '';

        try {

            tableCondition = typeof arrData.filterCondition !== undefined ? arrData.filterCondition : '';
            tableValue = typeof arrData.filterValue !== 'undefined' ? arrData.filterValue : '';
            table = typeof arrData.filterTable !== 'undefined' ? arrData.filterTable : '';
            tableColumn = typeof arrData.filterColumn !== 'undefined' ? arrData.filterColumn : '';
            filterJoin = typeof arrData.filterJoin !== 'undefined' ? arrData.filterJoin : '';

            console.log(arrData);
        } catch (err) {

        }

        var HTML = '<div role="form" class="form-inline filter">';

        var joinTypes = ['AND', 'OR'];

        if ($(".filter").length > 0) {
            HTML += '<div class="form-group">';
            HTML += '<select id="filterJoin" class="form-control filterJoin" name="filters[filterJoin][]">';

            $.each(joinTypes, function(index, joinType) {
                selected = joinType === filterJoin ? 'selected="selected"' : '';

                HTML += '<option value="' + joinType + '" ' + selected + '>' + joinType + '</option>';
            });

            HTML += '</select>';
            HTML += '</div>';

        }

        HTML += '<div class="form-group">';
        HTML += '<select id="filterTable" class="form-control filterTable" name="filters[filterTable][]">';
        HTML += '<option value=""></option>';
        HTML += buildTableList(table);
        HTML += '</select>';
        HTML += '</div>';
        HTML += '<div class="form-group">';
        HTML += '<select id="filterColumn" class="form-control filterColumn" name="filters[filterColumn][]">';

        if (table !== '') {
            $.each(arrFields[table], function(index, value) {
                selected = value.FLD_NAME === tableColumn ? 'selected="selected"' : '';
                HTML += '<option value="' + value.FLD_NAME + '" ' + selected + '>' + value.FLD_NAME + '</option>';
            });
        }

        HTML += '</select>';
        HTML += '</div>';

        var conditions = ['=', '!=', '>', '<'];

        HTML += '<div class="form-group">';
        HTML += '<select id="filterCondition" class="form-control filterCondition" name="filters[filterCondition][]">';

        $.each(conditions, function(index, condition) {
            selected = condition === tableCondition ? 'selected="selected"' : '';
            HTML += '<option value="' + condition + '" ' + selected + '>' + condition + '</option>';
        });

        HTML += '</select>';
        HTML += '</div>';

        HTML += '<div class="form-group">';
        HTML += '<input type="text" id="filterValue" class="form-control filterValue" name="filters[filterValue][]" value="' + tableValue + '">';

        HTML += '</div>';

        HTML += '<button type="button" class="btn btn-danger btn-xs deleteFilter">Delete</button>';

        HTML += '</div>';

        console.log(HTML);
        $(".filters").append(HTML);
        loadFilters();
    }

    loadFilters();

    $(document).ready(function() {
        $("[href='#cancel']").addClass("label label-danger");
        
        $(".AddNewOne").on("click", function () {
             $(".filters").html("");

            $("#reportId").val('');

            $("#title").val('');
            $("#description").val('');
            $("#table").val('');

            update = false;
            
            $(".client-detail").parent().parent().slideUp();
            $(".reportBuilder").slideDown();
        });

        $(".editReport").on("click", function() {
            var id = $(this).attr("id");
            var report = reports[id];

            $(".filters").html("");

            $("#reportId").val(id);

            $("#title").val(report.title);
            $("#description").val(report.description);
            $("#table").val(report.ADD_TAB_UID);

            update = true;

            loadOptions(report.ADD_TAB_UID);

            if (report.orderColumns !== undefined && report.orderColumns != 'undefined') {
                var orderOptions = $.parseJSON(report.orderColumns);

                options = loadOptions(report.ADD_TAB_UID, false);

                $("#orderTable").val(orderOptions.orderTable);

                $("#orderTable").change();

                $("#orderColumn").html(options);

                $("#orderColumn").val(orderOptions.orderColumn);
                $("#ordeeDir").val(orderOptions.orderDir);
            }


            console.log(orderOptions);

            $("#selectColumns").val($.parseJSON(report.selectColumns));

            var filters = $.parseJSON(reports[id].filters);

            $.each(filters.filterColumn, function(index, column) {
                var filterCondition = filters.filterCondition[index];
                var filterTable = filters.filterTable[index];
                var filterValue = filters.filterValue[index];
                var filterColumn = filters.filterColumn[index];
                var filterJoin = filters.filterJoin[index];

                var arrData = {
                    "filterCondition": filterCondition,
                    "filterTable": filterTable,
                    "filterValue": filterValue,
                    "filterColumn": filterColumn,
                    "filterJoin": filterJoin
                };

                buildFilters(arrData);
            });

            $(".client-detail").parent().parent().slideUp();
            $(".reportBuilder").slideDown();
        });

        $("#wizard").steps();
        $("#form").steps({
            bodyTag: "fieldset",
            onStepChanging: function(event, currentIndex, newIndex) {

                // Always allow going backward even if the current step contains invalid fields!
                if (currentIndex > newIndex) {
                    return true;
                }

                if (newIndex === 1) {
                    loadFilters();
                }

                if (newIndex === 2) {
                    var selectColumns = 'SELECT ';

                    selectColumns += $('#selectColumns').val().join(', ');

                    //                    $ ('#selectColumns > :selected').each (function ()
                    //                    {
                    //                        selectColumns += $(this).val();
                    //
                    //                    });

                    selectColumns += ' FROM rpt_' + $("#table option:selected").text().toLowerCase() + ' ';

                    var where = '';
                    var count = 0;

                    $('.filter').each(function() {
                        if ($(this).find(".filterColumn option:selected").val() !== '' && $(this).find(".filterValue").val() !== '') {

                            if (count > 0) {
                                if ($(this).find(".filterJoin option:selected").val() !== "") {
                                    where += ' ' + $(this).find(".filterJoin option:selected").val() + ' ';
                                }
                            }

                            where += $(this).find(".filterColumn option:selected").val() + ' ' + $(this).find(".filterCondition option:selected").val() + ' ' + $(this).find(".filterValue").val();
                        }

                        count++;
                    });

                    if (where !== '') {
                        selectColumns += ' WHERE ' + where;
                    }



                    if ($(".orderTable").val() !== "" && $(".orderColumn").val() !== "") {
                        selectColumns += ' ORDER BY ' + $(".orderColumn").val() + ' ' + $(".orderDir").val()
                    }

                    $("#sqlPreview").val(selectColumns);

                    var formData = $("#form").serialize();

                    $.ajax({
                        type: "POST",
                        url: "/FormBuilder/enterprise/previewReport/",
                        data: formData,
                        success: function(response) {
                            if ($.trim(response) === "") {
                                swal({
                                    title: "Failed to build sql",
                                    text: "Invalid SQL given",
                                    type: "warning",
                                    showCancelButton: false
                                });

                            } else {
                                buildPreview(response);
                                //                                $ (".reportResultBox").html (response);
                                //
                                //                                swal ({
                                //                                    title: "Success!",
                                //                                    text: "All Cases were routed successfully!",
                                //                                    type: "success"
                                //                                });
                            }
                        },
                        error: function(request, status, error) {
                            console.log("critical errror occured");
                        }
                    });
                }

                // Forbid suppressing "Warning" step if the user is to young
                if (newIndex === 3 && Number($("#age").val()) < 18) {
                    return false;
                }

                var form = $(this);

                // Clean up if user went backward before
                if (currentIndex < newIndex) {
                    // To remove error styles
                    $(".body:eq(" + newIndex + ") label.error", form).remove();
                    $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                }

                // Disable validation on fields that are disabled or hidden.
                form.validate().settings.ignore = ":disabled,:hidden";

                // Start validation; Prevent going forward if false
                return form.valid();
            },
            onStepChanged: function(event, currentIndex, priorIndex) {
                // Suppress (skip) "Warning" step if the user is old enough.
                if (currentIndex === 2 && Number($("#age").val()) >= 18) {
                    $(this).steps("next");
                }

                // Suppress (skip) "Warning" step if the user is old enough and wants to the previous step.
                if (currentIndex === 2 && priorIndex === 3) {
                    $(this).steps("previous");
                }
            },
            onFinishing: function(event, currentIndex) {
                var formData = $("#form").serialize();

                $.ajax({
                    type: "POST",
                    url: "/FormBuilder/enterprise/saveReportBuilder/",
                    data: formData,
                    success: function(response) {
                        if ($.trim(response) === "") {
                            swal({
                                title: "Success!",
                                text: "Report was saved successfully!",
                                type: "success"
                            });

                        } else {
                            swal({
                                title: "Failed to save report",
                                text: response,
                                type: "warning",
                                showCancelButton: false
                            });

                        }
                    },
                    error: function(request, status, error) {
                        console.log("critical errror occured");
                    }
                });

                return false;

                var form = $(this);

                // Disable validation on fields that are disabled.
                // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                form.validate().settings.ignore = ":disabled";

                // Start validation; Prevent form submission if false
                return form.valid();
            },
            onFinished: function(event, currentIndex) {
                var form = $(this);

                // Submit form input
                form.submit();
            }
        }).validate({
            errorPlacement: function(error, element) {
                element.before(error);
            }
        });
    });
</script>