<link rel="stylesheet" href="/FormBuilder/public/css/fileUpload/jquery.fileupload.css">
<link rel="stylesheet" href="/FormBuilder/public/css/fileUpload/css/jquery.fileupload-ui.css">


<!-- The file upload form used as target for the file upload widget -->
<form id="fileupload" action="//jquery-file-upload.appspot.com/" method="POST" enctype="multipart/form-data">
    <!-- Redirect browsers with JavaScript disabled to the origin page -->
    <noscript><input type="hidden" name="redirect" value="https://blueimp.github.io/jQuery-File-Upload/"></noscript>
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="col-lg-7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Add files...</span>
                <input type="file" name="files[]" multiple>
            </span>
            <button type="submit" class="btn btn-primary start">
                <i class="glyphicon glyphicon-upload"></i>
                <span>Start upload</span>
            </button>
            <button type="reset" class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel upload</span>
            </button>
            <button type="button" class="btn btn-danger delete">
                <i class="glyphicon glyphicon-trash"></i>
                <span>Delete</span>
            </button>
            <input type="checkbox" class="toggle">
            <!-- The global file processing state -->
            <span class="fileupload-process"></span>
        </div>
        <!-- The global progress state -->
        <div class="col-lg-5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                <div class="progress-bar progress-bar-success" style="width:0%;"></div>
            </div>
            <!-- The extended global progress state -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The table listing the files available for upload/download -->
    <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
</form>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="/FormBuilder/public/js/fileUpload/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="//blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<!-- blueimp Gallery script -->
<script src="//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/FormBuilder/public/js/fileUpload/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="/FormBuilder/public/js/fileUpload/jquery.fileupload-ui.js"></script>
<!-- The main application script -->
<script src="/FormBuilder/public/js/fileUpload/main.js"></script>

<script>

    var progressElements = {};


    $ ('#fileupload').fileupload ({
        filesContainer: $ ('table tbody.files'),
        uploadTemplateId: null,
        downloadTemplateId: null,
        dataType: 'json',
        url: '/FormBuilder/enterprise/processFiles',
        uploadTemplate: function (o)
        {
            var rows = $ ();
            $.each (o.files, function (index, file)
            {
                var row = $ ('<tr class="template-upload fade">' +
                        '<td><span class="preview"></span></td>' +
                        '<td><p class="name"></p>' +
                        '<div class="error"></div>' +
                        '</td>' +
                        '<td><p class="size"></p>' +
                        '<div class="progress"></div>' +
                        '</td>' +
                        '<td>' +
                        (!index && !o.options.autoUpload ?
                                '<button class="start btn btn-success" disabled>Start</button>' : '') +
                        (!index ? '<button class="cancel btn btn-danger">Cancel</button>' : '') +
                        '</td>' +
                        '</tr>');
                row.find ('.name').text (file.name);
                row.find ('.size').text (o.formatFileSize (file.size));
                if (file.error)
                {
                    row.find ('.error').text (file.error);
                }

                console.log (row);

                rows = rows.add (row);
            });
            return rows;
        },
        downloadTemplate: function (o)
        {
            var rows = $ ();
            $.each (o.files, function (index, file)
            {
                var row = $ ('<tr class="template-download fade">' +
                        '<td><span class="preview"></span></td>' +
                        '<td><p class="name"></p>' +
                        (file.error ? '<div class="error"></div>' : '') +
                        '</td>' +
                        '<td><span class="size"></span></td>' +
                        '<td><button class="delete btn btn-danger">Delete</button></td>' +
                        '</tr>');
                row.find ('.size').text (o.formatFileSize (file.size));
                if (file.error)
                {
                    row.find ('.name').text (file.name);
                    row.find ('.error').text (file.error);
                }
                else
                {
                    row.find ('.name').append ($ ('<a></a>').text (file.name));
                    if (file.thumbnailUrl)
                    {
                        row.find ('.preview').append (
                                $ ('<a></a>').append (
                                $ ('<img>').prop ('src', file.thumbnailUrl)
                                )
                                );
                    }
                    row.find ('a')
                            .attr ('data-gallery', '')
                            .prop ('href', file.url);
                    row.find ('button.delete')
                            .attr ('data-type', file.delete_type)
                            .attr ('data-url', file.delete_url);
                }

                rows = rows.add (row);
            });
            return rows;
        }
    });
</script>
